pipeline {
    agent {
        node {
            label 'maven-slaves'
        }
    }
    environment {
        PATH = "/opt/apache-maven-3.9.2/bin:$PATH"
        scannerHome = tool 'jkhan-sonarqube-scanner'
        MAVEN_OPTS = '-Xmx2048m'
    }

    stages {
        stage('Build and Test') {
            steps {
                dir('tweet_java_app') {
                    sh '''
                        mvn clean verify  // Changed from package to verify
                    '''
                }
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('tweet_java_app') {
                    withSonarQubeEnv('jkhan-sonarqube-server') {
                        sh """
                            ${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=ttrend01_trendapp \
                            -Dsonar.organization=ttrend01 \
                            -Dsonar.sources=src/main/java \
                            -Dsonar.java.binaries=target/classes \
                            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
                            -Dsonar.java.libraries=target/*.jar \
                            -Dsonar.sourceEncoding=UTF-8 \
                            -Dsonar.language=java \
                            -Dsonar.java.source=1.8
                        """
                    }
                }
            }
        }

        stage('Verify Reports') {
    steps {
        dir('tweet_java_app') {
            sh '''
                ls -la target/site/jacoco/
                cat target/site/jacoco/jacoco.xml || echo "JaCoCo XML not found"
            '''
        }
    }
}

    }

    post {
        always {
            cleanWs()
        }
        failure {
            echo 'Pipeline failed'
        }
        unstable {
            echo 'Pipeline unstable'
        }
        success {
            echo 'Pipeline succeeded'
        }
    }
}
