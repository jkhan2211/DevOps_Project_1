pipeline {
    agent {
        node {
            label 'maven-slaves'
        }
    }
    environment {
        PATH = "/opt/apache-maven-3.9.2/bin:$PATH"
        scannerHome = tool 'jkhan-sonarqube-scanner'
        MAVEN_OPTS = '-Xmx2048m'
    }

    stages {
        stage('Build') {
            steps {
                dir('tweet_java_app') {
                    sh '''
                        mvn clean install -Dmaven.test.skip=true
                    '''
                }
            }
        }

        stage('Unit Test') {
            steps {
                dir('tweet_java_app') {
                    sh '''
                        mvn test
                    '''
                }
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage("Sonar Analysis") {
            steps {
                dir('tweet_java_app') {
                    withSonarQubeEnv('valaxy-sonarqube-server') {
                        sh '''
                            ${scannerHome}/bin/sonar-scanner
                        '''
                    }
                }
            }
        }

        stage("Quality Gate") {
            steps {
                script {
                    timeout(time: 1, unit: 'HOURS') {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline failed due to quality gate failures: ${qg.status}"
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded'
        }
        failure {
            echo 'Pipeline failed'
        }
        unstable {
            echo 'Pipeline unstable'
        }
    }
}
